alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

if(sysCallNo==5) then
	alias word S2;
	alias fileDescriptor S3;
	word= [physicalSP - 3];
	fileDescriptor = [physicalSP - 4];

	if(fileDescriptor<0 || fileDescriptor>7) then
		[physicalSP-2]=-1;
		ireturn;
	endif;

	alias Pid S4;
	Pid=(PTBR-1024)/8;

	alias curPCB S5;
	curPCB=READY_LIST+32*Pid;

	//print("a");

	if([curPCB+15+2*fileDescriptor]==-1) then
		
		[physicalSP-2]=-1;
		ireturn;
	endif;

	//print("b");

	alias SWOTentry S6;
	alias lseekpos S7;
	SWOTentry=[curPCB+15+2*fileDescriptor];
	lseekpos=[curPCB+15+2*fileDescriptor+1];

	//print(SWOTentry);	

	alias fentry S8;
	fentry=[FILE_TABLE+SWOTentry*2];

	//print(fentry);

	load(1,[FAT+fentry*8+2]);

	alias datblk S9;	
	datblk=lseekpos/512;

	alias blkno S11;
	blkno=[SCRATCHPAD+datblk];
	

	if(blkno==-1) then
		alias cur S10;
		cur=0;
		while(cur<448) do
			if([DISK_LIST+cur]==0) then
				break;
			endif;
			cur=cur+1;
		endwhile;

		//print("c");

		if(cur==448) then
			[physicalSP-2]=-1;
			ireturn;
		endif;

		//print("d");
		[DISK_LIST+cur]=1;
		[SCRATCHPAD+datblk]=cur;
		store(1,[FAT+fentry*8+2]);
		[FAT+fentry*8+1]=[FAT+fentry*8+1]+512;
		store(5,19);
		store(6,20);
		blkno=cur;
	endif;

	
	load(1,blkno);
	[SCRATCHPAD+lseekpos%512]=word;
	store(1,blkno);

	[curPCB+15+fileDescriptor*2+1]= [curPCB+15+fileDescriptor*2+1] + 1;
	[physicalSP-2]=0;
	ireturn;

endif;
