alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

//Fork
if(sysCallNo==8) then
	alias ctr S2;
	ctr=0;
	while(ctr<32) do
		if([READY_LIST+ctr*32+1]==0) then
			break;
		endif;
		ctr=ctr+1;
	endwhile;
	//print ctr;

	if(ctr==32) then				//ctr is childPID
		[physicalSP-2]=-1;
		ireturn;
	endif;

	[READY_LIST+32*ctr]=ctr;

	alias curPID S3;
	curPID=(PTBR-1024)/8;

	alias pageCtr S4;
	pageCtr=0;

	alias iter S5;
	iter=0;

	

	//print iter;

	alias memctr S6;
	memctr=0;
	iter=29;

	while(iter < 64) do
		if([MEM_LIST+iter]==0) then
			memctr=memctr+1;
			//print memctr;
		endif;
		if(memctr==1) then
			break;
		endif;
		iter=iter+1;
	endwhile;

	//not enough memory
	if(memctr==0) then
		print "Memory Full";
		[physicalSP-2]=-1;
		ireturn;
	endif;

	alias counter S7;
	alias pageNo S8;
	alias cPTBR S9;
	counter=0;
	cPTBR=ctr*8+1024;
	
	[MEM_LIST+iter]=1;
	while(counter<512) do 
		[iter*512+counter]=[[PTBR+6]*512+counter];
		counter=counter+1;
	endwhile;

	[cPTBR+6]=iter;
	[cPTBR+7]="01";

	counter=0;
	while(counter<6) do
		[cPTBR+counter]=[PTBR+counter];
		counter=counter+1;
	endwhile;

	counter=0;
	while(counter<3) do
		if([PTBR+counter*2+1]=="01" || [PTBR+counter*2+1]=="01") then
			[MEM_LIST+[PTBR+counter*2]]=[MEM_LIST+[PTBR+counter*2]]+1;
			counter=counter+1;
			continue;
		endif;

		if([PTBR+counter*2+1]=="00") then
			if([PTBR+counter*2]>447) then
				[DISK_LIST+[PTBR+counter*2]]=[DISK_LIST+[PTBR+counter*2]]+1;
				store(6,20);
			endif;
		endif;	
	endwhile;

	[READY_LIST+ctr*32+2]=BP;
	[READY_LIST+ctr*32+3]=SP-1;

	//IP
	[READY_LIST+ctr*32+4]=[physicalSP];

	[READY_LIST+ctr*32+5]=cPTBR;
	[READY_LIST+ctr*32+6]=4;

	[READY_LIST+ctr*32+7]=R0;
	[READY_LIST+ctr*32+8]=R1;
	[READY_LIST+ctr*32+9]=R2;
	[READY_LIST+ctr*32+10]=R3;
	[READY_LIST+ctr*32+11]=R4;
	[READY_LIST+ctr*32+12]=R5;
	[READY_LIST+ctr*32+13]=R6;
	[READY_LIST+ctr*32+14]=R7;

	[READY_LIST+ctr*32+31]=curPID;

	counter=0;
	while(counter<8) do
		[READY_LIST+ctr*32+15+counter*2]=[READY_LIST+curPID*32+15+counter*2];
		[READY_LIST+ctr*32+15+counter*2+1]=[READY_LIST+curPID*32+15+counter*2+1];
		if([READY_LIST+ctr*32+15+counter*2]!=-1) then
			[FILE_TABLE+2*[READY_LIST+ctr*32+15+counter*2]+1]=[FILE_TABLE+2*[READY_LIST+ctr*32+15+counter*2]+1]+1;
		endif;
		counter=counter+1;
	endwhile;

	[READY_LIST+ctr*32+1]=1;
	[physicalSP-2]=ctr;

	alias cphysicalSP S10;
	cphysicalSP=([cPTBR + 2 * ((SP-1) / 512)] * 512) + ((SP-1) % 512);
	[cphysicalSP-1]=-2;
	ireturn;

endif;